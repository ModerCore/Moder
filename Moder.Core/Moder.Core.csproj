<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
		<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
		<RootNamespace>Moder.Core</RootNamespace>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;ARM64</Platforms>
		<RuntimeIdentifiers Condition="$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')) &gt;= 8">win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<RuntimeIdentifiers Condition="$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')) &lt; 8">win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
		<PublishProfile>win-$(Platform).pubxml</PublishProfile>
		<UseWinUI>true</UseWinUI>
		<EnableMsixTooling>true</EnableMsixTooling>

		<!-- Use our own Main entry point so we can control the HostBuilder -->
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
		<StartupObject>Moder.Core.Program</StartupObject>
		<WarningsAsErrors>nullable</WarningsAsErrors>
		<Nullable>enable</Nullable>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<!-- <WindowsPackageType>None</WindowsPackageType> -->
		<!-- 防止用户电脑上未安装 WindowsAppSDK -->
		<!-- <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained> -->
		<!-- <PublishTrimmed>true</PublishTrimmed> -->
		<!-- <PublishSingleFile>true</PublishSingleFile> -->
		<!-- <SelfContained>true</SelfContained> -->
		<!-- <TrimMode>full</TrimMode> -->
		<!-- <PublishReadyToRun>false</PublishReadyToRun> -->
	</PropertyGroup>
	<ItemGroup>
		<None Remove="Views\Game\BaseLeafControl.xaml" />
		<None Remove="Views\Game\StateFileControlView.xaml" />
		<None Remove="Views\Menus\OpenFolderControlView.xaml" />
		<None Remove="Views\Menus\SideWorkSpaceControlView.xaml" />
	</ItemGroup>

	<!-- 移除多余文件 -->
	<!-- <Target Name="RemoveFoldersWithMuiFiles" AfterTargets="Build"> -->
	<!-- 	<ItemGroup> -->
	<!-- 		<RemovingFiles Include="$(OutDir)*\*.mui" Exclude="$(OutDir)zh-CN\*.mui" /> -->
	<!-- 		<RemovingFolders Include="@(RemovingFiles->'%(RootDir)%(Directory)')" /> -->
	<!-- 	</ItemGroup> -->
	<!-- 	<RemoveDir Directories="@(RemovingFolders)" /> -->
	<!-- </Target> -->

	<ItemGroup>
		<Content Include="Assets\SplashScreen.scale-200.png" />
		<Content Include="Assets\LockScreenLogo.scale-200.png" />
		<Content Include="Assets\Square150x150Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
		<Content Include="Assets\StoreLogo.png" />
		<Content Include="Assets\Wide310x150Logo.scale-200.png" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.Sizers" Version="8.0.240109" />
		<PackageReference Include="Fody" Version="6.8.1">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="FSharp.Core" Version="8.0.400" />
		<PackageReference Include="MemoryPack" Version="1.21.1" />
		<PackageReference Include="MethodTimer.Fody" Version="3.2.2" />
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="8.0.0" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.1" />
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.5.240802000" />
		<PackageReference Include="ParadoxPower" Version="0.3.0-beta" />
		<PackageReference Include="WinUICommunity.Components" Version="6.9.0" />
		<PackageReference Include="WinUIEx" Version="2.3.4" />
		<Manifest Include="$(ApplicationManifest)" />
	</ItemGroup>

	<!--
	  Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
	  Tools extension to be activated for this project even if the Windows App SDK Nuget
	  package has not yet been restored.
	-->
	<ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\Moder.Hosting\Moder.Hosting.csproj" />
	</ItemGroup>
	<ItemGroup>
		<None Update="appsettings.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<Page Update="Views\Game\BaseLeafControl.xaml">
		  <Generator>MSBuild:Compile</Generator>
		</Page>
		<Page Update="Views\Game\StateFileControlView.xaml">
			<Generator>MSBuild:Compile</Generator>
		</Page>
		<Page Update="Views\Menus\SideWorkSpaceControlView.xaml">
			<Generator>MSBuild:Compile</Generator>
		</Page>
		<Page Update="Views\Menus\OpenFolderControlView.xaml">
			<Generator>MSBuild:Compile</Generator>
		</Page>
	</ItemGroup>

	<!--
	  Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
	  Explorer "Package and Publish" context menu entry to be enabled for this project even if
	  the Windows App SDK Nuget package has not yet been restored.
	-->
	<PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>
</Project>